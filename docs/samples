task_list = []

class Task {
    relations { 
        has_one previous
        has_one next
        has_many steps 
    }

    decl start_time {
        max(self.user_start_time, self.previous.end_time)
    }
        
    decl end_time {
        self.start_time + self.duration
    }

    proc constructor(duration, user_start_time) {
        self.user_start_time = user_start_time
        self.duration = duration
    }

    func wait_time {
        return self.start_time - self.previous.end_time
    }

}



proc add_task() {
    task = Task()
    last_task = task_list.max(Elements, t, t.end_time)
    task_list.add(task)
}

func get_task(start_time) {
    task_list.select(Elements, task, task, task.start_time == start_time)
}

func get_start_times() {
    task_list.selectset(Elements, task, task.start_time)
}
